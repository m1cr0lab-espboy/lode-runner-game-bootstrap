#pragma once

#include <Arduino.h>

uint16_t constexpr TRANS_COLOR = 0x1ff8;

uint8_t constexpr PLAYER_WIDTH           = 6;
uint8_t constexpr PLAYER_HEIGHT          = 8;
uint8_t constexpr PLAYER_SIZE            = PLAYER_WIDTH * PLAYER_HEIGHT;
uint8_t constexpr PLAYER_STAND_BY_FRAME  = 0;
uint8_t constexpr PLAYER_RUN_START_FRAME = 1;
uint8_t constexpr PLAYER_RUN_FRAMES      = 4;

uint16_t const constexpr PLAYER[] PROGMEM = {

    // Stand by
    0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8, 0x1ff8,
    0x1ff8, 0xffff, 0xffff, 0xffff, 0xffff, 0x1ff8,
    0x1ff8, 0xffff, 0xffff, 0xffff, 0xffff, 0x1ff8,
    0x1ff8, 0xffff, 0xffff, 0xffff, 0xffff, 0x1ff8,
    0x1ff8, 0xb3fe, 0xdf8d, 0xdf8d, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0xdf8d, 0xdf8d, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0x8ac4, 0x8ac4, 0x1ff8, 0x1ff8,

    // Run 1/4
    0x1ff8, 0x1ff8, 0x1ff8, 0x29f7, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8,
    0x1ff8, 0xd1a4, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0xd1a4, 0x1ff8, 0xffff, 0xffff, 0xffff, 0xb3fe,
    0xb3fe, 0x1ff8, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0xdf8d, 0xdf8d, 0xdf8d, 0x1ff8,
    0x8ac4, 0x101a, 0x101a, 0x1ff8, 0xdf8d, 0x1ff8,
    0x8ac4, 0x1ff8, 0x1ff8, 0x1ff8, 0x8ac4, 0x8ac4,

    // Run 2/4
    0x1ff8, 0x1ff8, 0x1ff8, 0x29f7, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0x1ff8, 0xd1a4, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0xffff, 0xffff, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0xdf8d, 0xdf8d, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0x101a, 0xdf8d, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0x8ac4, 0x8ac4, 0x8ac4, 0x1ff8,

    // Run 3/4
    0x1ff8, 0x1ff8, 0x1ff8, 0x29f7, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8,
    0x1ff8, 0xffff, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0xffff, 0x1ff8, 0xffff, 0xffff, 0xd1a4, 0xb3fe,
    0xb3fe, 0x1ff8, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0xdf8d, 0x101a, 0x101a, 0x1ff8,
    0x8ac4, 0xdf8d, 0xdf8d, 0x1ff8, 0x101a, 0x1ff8,
    0x8ac4, 0x1ff8, 0x1ff8, 0x1ff8, 0x8ac4, 0x8ac4,

    // Run 4/4
    0x1ff8, 0x1ff8, 0x1ff8, 0x29f7, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0x1ff8, 0xb3fe, 0xb3fe, 0x1ff8,
    0x1ff8, 0x1ff8, 0xffff, 0xffff, 0x1ff8, 0x1ff8,
    0x1ff8, 0xffff, 0xffff, 0xffff, 0xd1a4, 0xb3fe,
    0x1ff8, 0x1ff8, 0xffff, 0xb3fe, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0xdf8d, 0xdf8d, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0x101a, 0xdf8d, 0x1ff8, 0x1ff8,
    0x1ff8, 0x1ff8, 0x8ac4, 0x8ac4, 0x8ac4, 0x1ff8

};

/**
 * ----------------------------------------------------------------------------
 * Lode Runner game bootstrap
 * ----------------------------------------------------------------------------
 * Copyright (c) 2022 St√©phane Calderoni (https://github.com/m1cr0lab)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 * ----------------------------------------------------------------------------
 */